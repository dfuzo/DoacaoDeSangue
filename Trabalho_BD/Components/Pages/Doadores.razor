@page "/doadores"
@rendermode InteractiveServer
@inject NavigationManager _navigationManager
@inject DoadorService DoadorService
@using System.Globalization
@using Trabalho_BD.Data.Models
@using Trabalho_BD.Data.Services

<PageTitle>Doadores</PageTitle>

@if (doadores == null)
{
    <p>Loading...</p>
}
else
{
    <div class="container mt-4">
        <h2 class="text-center mb-4">Gerenciamento de Doadores</h2>

        <div class="card shadow p-4">
            <h4 class="mb-3">Lista de Doadores</h4>
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle">
                    <thead class="table-dark">
                        <tr>
                            <th>CPF Doador</th>
                            <th>Nome</th>
                            <th>Data Nascimento</th>
                            <th>Sexo</th>
                            <th>Peso</th>
                            <th>Telefone</th>
                            <th>Email</th>
                            <th>Tipo Sanguineo</th>
                            <th>Endereço</th>
                            <th>Ação</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var doador in doadores)
                        {
                            <tr>
                                <td>@doador.Cpf</td>
                                <td>@doador.Nome</td>
                                <td>@doador.DataNascimento.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)</td>
                                <td>@doador.Sexo</td>
                                <td>@doador.Peso</td>
                                <td>@doador.Telefone</td>
                                <td>@doador.Email</td>
                                <td>@doador.Id_Tipo_Sanguineo</td>
                                <td>@doador.Id_Endereco</td>
                                <td>
                                    <button @onclick="() => EditDoador(doador)" class="btn btn-warning btn-sm">
                                        <i class="bi bi-pencil-square"></i> Editar
                                    </button>
                                    <button @onclick="() => DeleteDoador(doador.Cpf)" class="btn btn-danger btn-sm">
                                        <i class="bi bi-trash"></i> Excluir
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="card shadow p-4 mt-4">
            <h4 class="mb-3">Adicionar / Editar Doador</h4>
            <div class="col-md-6">
                <div class="mb-3">
                    <div class="col-md-6">
                        <label class="form-label">CPF:</label>
                        <input @bind="selectedDoador.Cpf" class="form-control" />
                    </div>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Nome:</label>
                    <input @bind="selectedDoador.Nome" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label class="form-label">Data de Nascimento:</label>
                    <input @bind="selectedDoador.DataNascimento" type="date" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label class="form-label">Sexo:</label>
                    <input @bind="selectedDoador.Sexo" class="form-control" />
                </div>
                <div class="col-md-4">
                    <label class="form-label">Peso (Kg):</label>
                    <input @bind="selectedDoador.Peso" type="number" step="0.01" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label class="form-label">Telefone:</label>
                    <input @bind="selectedDoador.Telefone" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label class="form-label">Email:</label>
                    <input @bind="selectedDoador.Email" class="form-control" />
                </div>
                <div class="col-md-4">
                    <label class="form-label">Id Tipo Sanguíneo:</label>
                    <input @bind="selectedDoador.Id_Tipo_Sanguineo" type="number" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label class="form-label">ID Endereço:</label>
                    <input @bind="selectedDoador.Id_Endereco" class="form-control" />
                </div>
            </div>

            <div class="d-flex justify-content-end mt-3">
                <button @onclick="SaveDoador" class="btn btn-success me-2">
                    <i class="bi bi-save"></i> Salvar
                </button>
            </div>
        </div>
    </div>

}

@code {
    private List<Doador> doadores = new();
    private Doador selectedDoador = new Doador();

    protected override async Task OnInitializedAsync()
    {
        doadores = await DoadorService.GetDoadoresAsync();
        Console.WriteLine("pagina carregada!");
    }

    private async Task SaveDoador()
    {
        if (selectedDoador.Cpf != null)
        {
            await DoadorService.UpdateDoadorAsync(selectedDoador);
        }
        else
        {
            await DoadorService.AddDoadorAsync(selectedDoador);
        }
        _navigationManager.NavigateTo("/doadores", forceLoad: true);
    }

    private void EditDoador(Doador doador)
    {
        selectedDoador = new Doador
            {
                Cpf = doador.Cpf,
                Nome = doador.Nome,
                DataNascimento = doador.DataNascimento,
                Sexo = doador.Sexo,
                Peso = doador.Peso,
                Telefone = doador.Telefone,
                Email = doador.Email,
                Id_Tipo_Sanguineo = doador.Id_Tipo_Sanguineo,
                Id_Endereco = doador.Id_Endereco
            };
    }

    private async Task DeleteDoador(string cpf)
    {
        await DoadorService.DeleteDoadorAsync(cpf);
        doadores = await DoadorService.GetDoadoresAsync();
        StateHasChanged();
    }
}
