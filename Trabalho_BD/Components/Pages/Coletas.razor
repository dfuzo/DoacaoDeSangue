@page "/coletas"
@rendermode InteractiveServer
@inject NavigationManager _navigationManager
@inject ColetaService ColetaService
@inject DoadorService DoadorService
@inject FuncionarioService FuncionarioService
@inject HemocentroService HemocentroService
@inject FuncionarioService FuncionarioService
@inject TipoSanguineoService TipoSanguineoService
@using System.Globalization
@using Trabalho_BD.Data.Models
@using Trabalho_BD.Data.Services

<PageTitle>Coletas</PageTitle>

@if (coletas == null)
{
    <p>Loading...</p>
}
else
{
    <div class="container mt-4">
        <h2 class="text-center mb-4">Gerenciamento de Coletas</h2>

        <div class="card shadow p-4">
            <h4 class="mb-3">Lista de Coletas</h4>
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle">
                    <thead class="table-dark">
                        <tr>
                            <th>ID</th>
                            <th>CPF Doador</th>
                            <th>Ponto Funcionário</th>
                            <th>Data Coleta</th>
                            <th>Data Validade</th>
                            <th>Volume</th>
                            <th>Id Hemocentro</th>
                            <th>Id Tipo Sanguíneo</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var coleta in coletas)
                        {
                            <tr>
                                <td>@coleta.IdColeta</td>
                                <td>@coleta.CpfDoador</td>
                                <td>@coleta.PontoFuncionario</td>
                                <td>@coleta.DataColeta.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)</td>
                                <td>@coleta.DataValidade.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)</td>
                                <td>@coleta.Volume.ToString("F2", CultureInfo.InvariantCulture) L</td>
                                <td>@coleta.IdHemocentro</td>
                                <td>@coleta.IdTipoSanguineo</td>
                                <td>
                                    <button @onclick="() => EditColeta(coleta)" class="btn btn-warning btn-sm">
                                        <i class="bi bi-pencil-square"></i> Editar
                                    </button>
                                    <button @onclick="() => DeleteColeta(coleta.IdColeta)" class="btn btn-danger btn-sm">
                                        <i class="bi bi-trash"></i> Excluir
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="card shadow p-4 mt-4">
            <h4 class="mb-3">Adicionar / Editar Coleta</h4>
            <div class="col-md-6">
                <div class="mb-3">
                    <label>CPF Doador:</label>
                    <select @bind="selectedColeta.CpfDoador" class="form-control">
                        <option value="">-- Selecione Doador --</option>
                        @foreach (var doador in doadores)
                        {
                            <option value="@doador.Cpf">@doador.Cpf - @doador.Nome</option>
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label>Ponto Funcionario:</label>
                    <select @bind="selectedColeta.PontoFuncionario" class="form-control">
                        <option value="">-- Selecione o Funcionario --</option>
                        @foreach (var funcionario in funcionarios)
                        {
                            <option value="@funcionario.Ponto">@funcionario.Ponto - @funcionario.Nome</option>
                        }
                    </select>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Data Coleta:</label>
                    <input @bind="selectedColeta.DataColeta" type="date" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label class="form-label">Data Validade:</label>
                    <input @bind="selectedColeta.DataValidade" type="date" class="form-control" />
                </div>
                <div class="col-md-4">
                    <label class="form-label">Volume (mL):</label>
                    <input @bind="selectedColeta.Volume" type="number" step="0.01" class="form-control" />
                </div>
                <div class="mb-3">
                    <label>Hemocentro:</label>
                    <select @bind="selectedColeta.IdHemocentro" class="form-control">
                        <option value="">-- Selecione o hemocentro --</option>
                        @foreach (var hemocentro in hemocentros)
                        {
                            <option value="@hemocentro.Cnpj">@hemocentro.Cnpj - @hemocentro.Nome</option>
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label>Tipo Sanguineo:</label>
                    <select @bind="selectedColeta.IdTipoSanguineo" class="form-control">
                        <option value="">-- Selecione o tipo sanguineo --</option>
                        @foreach (var tipoSanguineo in tipos)
                        {
                            <option value="@tipoSanguineo.IdTipoSanguineo">@tipoSanguineo.Tipo @tipoSanguineo.FatorRh</option>
                        }
                    </select>
                </div>
            </div>

            <div class="d-flex justify-content-end mt-3">
                <button @onclick="SaveColeta" class="btn btn-success me-2">
                    <i class="bi bi-save"></i> Salvar
                </button>
            </div>
        </div>
    </div>

}

@code {

    private List<Coleta> coletas = new();
    private Coleta selectedColeta = new Coleta();
    private List<Doador> doadores = new();
    private List<Funcionario> funcionarios = new();
    private List<Hemocentro> hemocentros = new();
    private List<TipoSanguineo> tipos = new();

    protected override async Task OnInitializedAsync()
    {
        coletas = await ColetaService.GetColetasAsync();
        doadores = await DoadorService.GetDoadoresAsync();
        funcionarios = await FuncionarioService.GetFuncionariosAsync();
        hemocentros = await HemocentroService.GetHemocentrosAsync();
        tipos = await TipoSanguineoService.GetTipoSanguineosAsync();
        Console.WriteLine("pagina carregada!");
    }

    private async Task SaveColeta()
    {
        if (selectedColeta.IdColeta != 0)
        {
            await ColetaService.UpdateColetaAsync(selectedColeta);
        }
        else
        {
            await ColetaService.AddColetaAsync(selectedColeta);
        }

        _navigationManager.NavigateTo("/coletas", forceLoad: true);
    }

    private void EditColeta(Coleta coleta)
    {
        selectedColeta = new Coleta
            {
                IdColeta = coleta.IdColeta,
                CpfDoador = coleta.CpfDoador,
                PontoFuncionario = coleta.PontoFuncionario,
                DataColeta = coleta.DataColeta,
                DataValidade = coleta.DataValidade,
                Volume = coleta.Volume,
                IdHemocentro = coleta.IdHemocentro,
                IdTipoSanguineo = coleta.IdTipoSanguineo
            };
    }

    private async Task DeleteColeta(int id)
    {
        await ColetaService.DeleteColetaAsync(id);
        coletas = await ColetaService.GetColetasAsync(); 
        StateHasChanged(); 
    }
}
